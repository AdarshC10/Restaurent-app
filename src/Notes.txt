

          RESTAURENT LISTING App

    ----------------------------------


    1.Create a new application : npx  create-react-app restaurent-listing-app
    2.cd restaurent-listing-app
    3.code .
    4.Run the application : npm start
    5.Clean the code
    6.Choose a them using bootswatch -https://bootswatch.com/ and import  it into the index.js
    7.Copy and paste fontawsoe cdnjs in to index.html
    8.copy and  paste google fonts in to index.css
    9. install react bootstrap :- npm install react-bootstrap bootstrap
    10.Components creation
                Components  
                    -Header
                        Header.js
                        Header.css

    11. Backend  server creation we are doing
    12.API fetching - axios
             
             Axios is a promise-based HTTP Client for node.js and the browser. It is isomorphic (= it can run in the browser and nodejs with the same codebase).
              On the server-side it uses the native node.js http module, while on the client (browser) it uses XMLHttpRequests.
                    ----------------------------------------------------------------------------------------------------------

                    Features
                    --------
                    Make XMLHttpRequests from the browser
                    Make http requests from node.js
                    Supports the Promise API
                    Intercept request and response
                    Transform request and response data
                    Cancel requests
                    Timeouts
                    Query parameters serialization with support for nested entries
                    Automatic request body serialization to:
                    JSON (application/json)
                    Multipart / FormData (multipart/form-data)
                    URL encoded form (application/x-www-form-urlencoded)
                    Posting HTML forms as JSON
                    Automatic JSON data handling in response
                    Progress capturing for browsers and node.js with extra info (speed rate, remaining time)
                    Setting bandwidth limits for node.js
                    Compatible with spec-compliant FormData and Blob (including node.js)
                    Client side support for protecting against XSRF

            install
            -------
            npm i axios

            useEffect

            useEffect Hook allows you to perform side effects in your components.

            ->Path setup
                ->Rect Router Dom install - npm i react-router-dom

                ->  Browser Router -Used to setup app routing ( set the path for entire application )
                ->  Routes  -> To hold more than one route(used to hold multiple components)
                ->  Route   -> Used to setup a component path


           -> usedto access the id
            useParams() -In our React app sometimes we want to access the parameters of the current route in this case useParams hook comes into action.
                         The react-router-dom package has useParams hooks that let you access the parameters of the current route.
 
            

            Redux step
            ---------

            1.Create a store in src - store.js
            2.To avaliable the store for enire application - index.js
            3.Create Action  folder - RestlistAction.js to define logic
            